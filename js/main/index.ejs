
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Leitura de Arquivo em Formulário</title>
</head>

<body>
  <form id="myForm">
    <input type="file" id="fileInput">

    <button type="button" id="btnExtrair">Extrair</button>
  </form>

  <script src="/js/main/novo-kmeans.js"></script>

  <script>

    const frm = document.querySelector("#myForm");

    function lerArquivoComoString(arquivo, callback) {
      const leitor = new FileReader();

      leitor.onload = function (event) {
        const resultado = event.target.result;
        callback(null, resultado);
      };

      leitor.onerror = function (event) {
        callback(event.target.error, null);
      };

      leitor.readAsText(arquivo);
    }

    function extrair(lista_codigo, carac) {
      const dicionario = {};

      for (const cmd of carac) {
        let count = 0;

        for (const frase of lista_codigo) {
          if (cmd === "if") {
            if (frase.includes("if(") || frase.includes("if (")) {
              count += 1;
            }
          } else if (cmd === "for") {
            if (frase.includes("for(") || frase.includes("for (")) {
              count += 1;
            }
          } else if (frase.includes(cmd)) {
            count += 1;
          }
        }

        dicionario[cmd] = count;
      }
      return dicionario;
    }

    // Exemplo de uso:
    const input = document.getElementById('fileInput');

    input.addEventListener('change', function (event) {
      const arquivo = event.target.files[0];

      if (arquivo) {
        lerArquivoComoString(arquivo, function (erro, conteudo) {
          if (erro) {
            console.error('Erro ao ler o arquivo:', erro);
          } else {
            console.log('Conteúdo do arquivo como string:', conteudo);

            // Agora, você pode chamar a função extrair com a lista de características e o conteúdo do arquivo.
            const lista_codigo = conteudo.split('\n'); // Divide o conteúdo em linhas.
            const carac = [
              "if", "for", "while", "case", "else", "fgets", "getch", "getchar", "getche",
              "putchar", "puts", "switch", "gets", "break", "return", "exit", "do", "strcpy",
              "strcmp", "strncpy", "strlen", "strupr", "strlwr", "strrev", "tolower", "toupper",
              "isalpha", "fopen", "fclose", "feof", "remove", "fflush", "sizeof", "typedef",
              "struct", "malloc", "free", "#include", "system", "default", "main", "functions",
              "argc", "argv"
            ];

            const resultado = extrair(lista_codigo, carac);
            console.log(resultado); // Exibirá o resultado no console

            kmeans.clusterize(carac, { k }, (err, result) => {
              if (err) {
                console.error(err);
                return;
              }
              const clusterAssignments = result.map(point => point.cluster);
              console.log('Cluster assignments:', clusterAssignments);
            })

            //const numClusters = 3;
            //const clusters = kmeans.runKMeans(lista_codigo, numClusters);
            // console.log(clusters);
          }
        });
      }
    });
  </script>
</body>

</html>